;;widgets
(defwidget bar []
    (centerbox :orientation "h"
        (leftside)
        (center)
        (rightside)
    )
)

(defwidget leftside []
    (box
    :class "workspaces"
    :orientation "h"
    :halign "start"
        (music)
    )
)

(defwidget center []
    (box
    :class "center"
    :orientation "h"
    :space-evenly false
    :halign "center"
        time
    )
)

(defwidget rightside []
    (box
    :class "rightside"
    :orientation "h"
    :space-evenly false
    :halign "end"
    :spacing 15
        (wifi)
        (battery)
        (button
        :class "menu-icon"
        (label :text "" :tooltip "I use Arch btw")
        )
    )
)


(defwidget music []
    (button
    :onclick "playerctl play-pause"
        (label :class "music" :text {music != "" ? "${music}" : ""})
    )
)

(defwidget wifi []

  (label :class "wifi-icon" :tooltip "📶 ${wifi.ssid} ${round(wifi.level * 100 / 70, 0)}%"
    :text "${wifi.status == 1 ?
        wifi.internet == 1 ?
        wifi.level < 14 ? "󰤯" :
        wifi.level < 28 ? "󰤟" :
        wifi.level < 42 ? "󰤢" :
        wifi.level < 56 ? "󰤥" : "󰤨"
        :
        wifi.level < 14 ? "󰤫" :
        wifi.level < 28 ? "󰤠" :
        wifi.level < 42 ? "󰤣" :
        wifi.level < 56 ? "󰤦" : "󰤩"
    : "󰤮"}")
)

(defwidget battery []
  (box :class "battery" :space-evenly "false"
    (label :class "battery-icon"  :tooltip "${EWW_BATTERY.BAT0.status == "Full" ? "Full" : "${round(EWW_BATTERY.BAT0.capacity, 0)}%"}"
    :text "${
        EWW_BATTERY.BAT0.status == "Charging" ?
             EWW_BATTERY.BAT0.capacity < 10 ? "󰢟" :
 	         EWW_BATTERY.BAT0.capacity < 20 ? "󰢜" :
 	         EWW_BATTERY.BAT0.capacity < 30 ? "󰂇" :
             EWW_BATTERY.BAT0.capacity < 40 ? "󰂈" :
             EWW_BATTERY.BAT0.capacity < 50 ? "󰢝" :
             EWW_BATTERY.BAT0.capacity < 60 ? "󰂉" :
         	 EWW_BATTERY.BAT0.capacity < 70 ? "󰢞" :
           	 EWW_BATTERY.BAT0.capacity < 80 ? "󰂊" :
       		 EWW_BATTERY.BAT0.capacity < 90 ? "󰂋" : "󰂅"
        :EWW_BATTERY.BAT0.status == "Full" ? "󱟢" :
             EWW_BATTERY.BAT0.capacity < 10 ? "󰁺" :
	         EWW_BATTERY.BAT0.capacity < 20 ? "󰁻" :
	         EWW_BATTERY.BAT0.capacity < 30 ? "󰁼" :
             EWW_BATTERY.BAT0.capacity < 40 ? "󰁽" :
             EWW_BATTERY.BAT0.capacity < 50 ? "󰁾" :
             EWW_BATTERY.BAT0.capacity < 60 ? "󰁿" :
        	 EWW_BATTERY.BAT0.capacity < 70 ? "󰂀" :
          	 EWW_BATTERY.BAT0.capacity < 80 ? "󰂁" :
      		 EWW_BATTERY.BAT0.capacity < 90 ? "󰂂" : "󰁹"
        }")
    )
)


;;Listeners

(defpoll wifi :interval "10s" :initial "{}"
    "bash ~/.config/eww/scripts/wifi"
)

(deflisten music :initial ""
    "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true"
)

(defpoll time :interval "10s"
    "date '+%H:%M'"
)

(defwindow bar
:monitor 0
:exclusive true
:windowtype "dock"
:geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "8px"
    :anchor "bottom center"
)
    (bar)
)






(defwindow volume
:monitor 0
:exclusive "false"
:geometry
    (geometry
        :x "0%"
        :y "10%"
        :width "200px"
        :height "50px"
        :anchor "bottom center"
    )
    (box :class "volume-container" :halign "center" :space-evenly "false"
   	    (button :onclick "pactl -- set-sink-mute @DEFAULT_SINK@ toggle && bash ~/.config/hypr/scripts/show_volume &"
   	        (label :class "${muteval == 1 ? 'volume-icon-muted' : 'volume-icon'}" :text "${muteval == 1 ? "" : ""}")
   	    )
   	     (scale :min 0 :max 100 :value volumeval :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}% && bash ~/.config/hypr/scripts/show_volume &")
    )
)
(defvar muteval 0)
(defvar volumeval "pactl get-sink-volume @DEFAULT_SINK@ | awk '/front-left/ {print $5}' | awk -F% '{print $1}'")


(defwindow bright
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "10%"
                      :width "200px"
                      :height "50px"
                      :anchor "bottom center"
                      )
  :exclusive "false"
  (box :class "bright-container" :halign "center" :space-evenly "false"
   	  (label :class "bright-icon" :text "󰃠")
   	  (scale :min 0 :max 100 :value brightval :onchange "brightnessctl s {}% && bash ~/.config/hypr/scripts/show_bright &")
  )
)
(defvar brightval 10)

(defwindow menu
:monitor 0
:exclusive "false"
:geometry
    (geometry
        :x "0%"
        :y "0%"
        :width "300px"
        :height "100px"
        :anchor "bottom right"
    )
    (box :class "menu-container" :halign "left" :space-evenly "false"
        (button
        :onclick "bash ~/.config/eww/scripts/tabletdisplay &"
        :class "menu-startup-button"
            (box :class "menu-startup-box" :orientation "vertical"
                (label :class "menu-startup-icon tablet-icon" :text "󰍺" :valign "center")
                (label :class "menu-startup-text" :text "Connect tablet")
            )
        )
    )
)
